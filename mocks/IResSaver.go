// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import modelsres "github.com/PedroMFC/EvaluaUGR/internal/microres/modelsres"

// IResSaver is an autogenerated mock type for the IResSaver type
type IResSaver struct {
	mock.Mock
}

// AsignaturaRegistrada provides a mock function with given fields: asignatura
func (_m *IResSaver) AsignaturaRegistrada(asignatura string) bool {
	ret := _m.Called(asignatura)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(asignatura)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// CrearAsignatura provides a mock function with given fields: asignatura
func (_m *IResSaver) CrearAsignatura(asignatura string) {
	_m.Called(asignatura)
}

// GuardarResenia provides a mock function with given fields: asignatura, opinion
func (_m *IResSaver) GuardarResenia(asignatura string, opinion *modelsres.Resenia) {
	_m.Called(asignatura, opinion)
}

// MeGustaResenia provides a mock function with given fields: asignatura, id
func (_m *IResSaver) MeGustaResenia(asignatura string, id int) error {
	ret := _m.Called(asignatura, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, int) error); ok {
		r0 = rf(asignatura, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NoMeGustaResenia provides a mock function with given fields: asignatura, id
func (_m *IResSaver) NoMeGustaResenia(asignatura string, id int) error {
	ret := _m.Called(asignatura, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, int) error); ok {
		r0 = rf(asignatura, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ObtenerResenias provides a mock function with given fields: asignatura
func (_m *IResSaver) ObtenerResenias(asignatura string) []modelsres.Resenia {
	ret := _m.Called(asignatura)

	var r0 []modelsres.Resenia
	if rf, ok := ret.Get(0).(func(string) []modelsres.Resenia); ok {
		r0 = rf(asignatura)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]modelsres.Resenia)
		}
	}

	return r0
}
