version: '3'

services: 
  postgres:
    image: postgres:alpine
    container_name: db_postgres
    environment:
      - POSTGRES_USER=${DB_USER}  
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST} 
    ports:
      - '5432:5432'
    networks:
      - mynet

  etcd:
    image: 'bitnami/etcd:latest'
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - 2379:2379
      - 2380:2380
    networks:
      - mynet
      
  app:
    image: pedromfc/evaluaugr
    container_name: aplicacion
    depends_on:
      - postgres
      - etcd
    ports: 
      - "8080:8080"
    environment: 
      - GIN_MODE=${GIN_MODE}
      - PUERTO=${PUERTO}
      - ADDRESS=${ADDRESS}
      - DB_USER=${DB_USER}  
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST} 
      - ETCD_HOST=${ETCD_HOST}
      - ETCD_PORT=${ETCD_PORT}
      - WAIT_HOSTS=${DB_HOST}:${DB_PORT}, ${ETCD_HOST}:${ETCD_PORT}
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    volumes:
      - $PWD:/app/test
    networks:
      - mynet

    command: ["sh","-c","/wait"]
    command: ["task", "run"]

  
    
# Networks to be created to facilitate communication between containers
networks:
  mynet:
    driver: bridge


